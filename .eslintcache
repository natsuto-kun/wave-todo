[{"/home/tomato/wave-todo/src/App.tsx":"1","/home/tomato/wave-todo/src/Progress.tsx":"2","/home/tomato/wave-todo/src/index.tsx":"3","/home/tomato/wave-todo/src/AppForm.tsx":"4","/home/tomato/wave-todo/src/ToDoList.tsx":"5","/home/tomato/wave-todo/src/reportWebVitals.ts":"6","/home/tomato/wave-todo/src/components/CheckBox.tsx":"7","/home/tomato/wave-todo/src/Router.tsx":"8","/home/tomato/wave-todo/src/contexts/countContext.ts":"9","/home/tomato/wave-todo/src/contexts/listContext.ts":"10"},{"size":1383,"mtime":1611391627582,"results":"11","hashOfConfig":"12"},{"size":2723,"mtime":1611401807159,"results":"13","hashOfConfig":"12"},{"size":510,"mtime":1611128462182,"results":"14","hashOfConfig":"12"},{"size":1387,"mtime":1611391629310,"results":"15","hashOfConfig":"12"},{"size":774,"mtime":1611391338597,"results":"16","hashOfConfig":"12"},{"size":425,"mtime":1611125168570,"results":"17","hashOfConfig":"12"},{"size":1254,"mtime":1611391911028,"results":"18","hashOfConfig":"12"},{"size":862,"mtime":1611391968273,"results":"19","hashOfConfig":"12"},{"size":136,"mtime":1611390737047,"results":"20","hashOfConfig":"12"},{"size":243,"mtime":1611390887825,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y393aa",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tomato/wave-todo/src/App.tsx",[],"/home/tomato/wave-todo/src/Progress.tsx",["47"],"import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components\";\nimport { countContext } from \"./contexts/countContext\";\n\ninterface Props {\n  choseCount: number;\n}\n\nconst WaveWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: relative;\n  bottom: 0;\n  background: #6bffe6;\n  box-shadow: 0 5 5 0px #144137;\n  overflow: hidden;\n`;\n\nconst WaveMove = keyframes`\n  0%{\n        transform: translate(-50%, -75%) rotate(0deg);\n    }\n  100%{\n        transform: translate(-50%, -75%) rotate(180deg);\n  }\n`;\n\nconst Wave = styled.div`\n  content: \"\";\n  position: absolute;\n  width: 200vw;\n  height: 150vw;\n  top: calc(100vh - 85vw);\n  left: 50%;\n  transform: translate(-50%, -75%);\n  background: #fff;\n  border-radius: 40%;\n  animation: ${WaveMove} 4s linear infinite;\n`;\n\nconst WaveFirst = styled(Wave)`\n  content: \"\";\n  position: absolute;\n  width: 200vw;\n  height: 150vw;\n  top: calc(100vh - 100vw);\n  left: 50%;\n  transform: translate(-50%, -75%);\n  background: #fff;\n  border-radius: 40%;\n  animation: ${WaveMove} 4s linear infinite;\n`;\n\nconst WaveSecond = styled(Wave)`\n  content: \"\";\n  position: absolute;\n  width: 200vw;\n  height: 150vw;\n  top: calc(100vh - 120vw);\n  left: 50%;\n  transform: translate(-50%, -75%);\n  background: #fff;\n  border-radius: 40%;\n  animation: ${WaveMove} 4s linear infinite;\n`;\n\nconst WaveThird = styled(Wave)`\n  content: \"\";\n  position: absolute;\n  width: 200vw;\n  height: 150vw;\n  top: calc(100vh - 100vw);\n  left: 50%;\n  transform: translate(-50%, -75%);\n  background: #fff;\n  border-radius: 40%;\n  animation: ${WaveMove} 4s linear infinite;\n`;\n\nconst WaveForth = styled(Wave)`\n  content: \"\";\n  position: absolute;\n  width: 200vw;\n  height: 150vw;\n  top: calc(100vh - 100vw);\n  left: 50%;\n  transform: translate(-50%, -75%);\n  background: #fff;\n  border-radius: 40%;\n  animation: ${WaveMove} 4s linear infinite;\n`;\n\nconst WaveFive = styled(Wave)`\n  top: 0px;\n`;\n\nfunction Progress({ choseCount }: Props) {\n  const Waves = [\n    <WaveFirst />,\n    <WaveSecond />,\n    <WaveThird />,\n    <WaveForth />,\n    <WaveFive />,\n  ];\n\n  const WaveIf = (choseCount: number) => Waves[choseCount];\n\n  const { count } = useContext(countContext);\n  return (\n    <WaveWrapper>\n      <header>\n        <p>{count}</p>\n        <button>\n          <Link to=\"/\">back</Link>\n        </button>\n      </header>\n      <WaveThird />\n      {choseCount === 0 ? (\n        <WaveFirst />\n      ) : choseCount === 1 ? (\n        <WaveSecond />\n      ) : choseCount === 2 ? (\n        <WaveThird />\n      ) : choseCount === 3 ? (\n        <WaveForth />\n      ) : (\n        <WaveFive />\n      )}\n    </WaveWrapper>\n  );\n}\n\nexport default Progress;\n","/home/tomato/wave-todo/src/index.tsx",[],["48","49"],"/home/tomato/wave-todo/src/AppForm.tsx",["50","51"],"import { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { IListItem, listContext } from \"./contexts/listContext\";\n\nconst Base = styled.div`\n  width: 300px;\n  height: 100%;\n  border: 1px solid aquamarine;\n  margin: 12px;\n  border-radius: 4px;\n  background-color: #fafbfd;\n  box-shadow: 1px 2px 5px 3px rgba(0, 0, 0, 0.1);\n  padding: 4px 2px;\n`;\n\nconst Input = styled.input`\n  border-radius: 8px;\n  padding: 4px 8px;\n  border: 1px solid #2ce0d7;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: auto;\n  padding-right: auto;\n`;\n\nconst Button = styled.button`\n  font-size: 20px;\n  display: inline-block;\n  color: #29787a;\n  border: double 4px #29787a;\n  border-radius: 10px;\n  background-color: #ffffff;\n  cursor: pointer;\n  align-items: center;\n  margin: auto;\n`;\n\ninterface Props {\n  onAddList: (item: IListItem) => void;\n}\n\nexport const AppForm = ({ onAddList }: Props) => {\n  const [text, setText] = useState(\"\");\n\n  const submitText = () => {\n    if (text === \"\") return;\n    onAddList({ isChecked: false, value: text });\n    setText(\"\");\n  };\n\n  return (\n    <Base>\n      <div>\n        <Input\n          type=\"text\"\n          value={text}\n          onChange={(event) => setText(event.target.value)}\n        />\n      </div>\n      <div>\n        <Button onClick={submitText}>+</Button>\n      </div>\n    </Base>\n  );\n};\n","/home/tomato/wave-todo/src/ToDoList.tsx",["52","53"],"import { useState } from \"react\";\nimport { CheckBox } from \"./components/CheckBox\";\nimport styled from \"styled-components\";\nimport { IListItem } from \"./contexts/listContext\";\n\nconst ToDoContainer = styled.div`\n  display: flex;\n  border: 1px solid aquamarine;\n  margin: 12px;\n  border-radius: 4px;\n  width: 300px;\n  background-color: #fafbfd;\n  box-shadow: 1px 2px 5px 3px rgba(0, 0, 0, 0.1);\n  padding: 4px 2px;\n`;\n\nconst DeleteButton = styled.button``;\n\ninterface Props {\n  list: IListItem[];\n}\n\nexport const ToDoList = ({ list }: Props) => {\n  return (\n    <div>\n      {list.map((item, index) => {\n        return (\n          <ToDoContainer>\n            <CheckBox key={index} index={index} item={item} />\n          </ToDoContainer>\n        );\n      })}\n    </div>\n  );\n};\n","/home/tomato/wave-todo/src/reportWebVitals.ts",[],"/home/tomato/wave-todo/src/components/CheckBox.tsx",["54"],"import { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { countContext } from \"../contexts/countContext\";\nimport { IListItem, listContext } from \"../contexts/listContext\";\n\nconst ToDo = styled.div`\n  padding-top: auto;\n`;\n\nconst Check = styled.input`\n  padding-left: 40px;\n  padding-bottom: 50%;\n  position: relative;\n  margin-right: 20px;\n  content: \"\";\n  display: block;\n  width: 30px;\n  height: 30px;\n  border: 1px solid #999;\n  border-radius: 4px;\n`;\n\nconst DeleteButton = styled.button``;\n\ninterface Props {\n  index: number;\n  item: IListItem;\n}\n\nexport const CheckBox = ({ index, item }: Props) => {\n  const { count, setCount } = useContext(countContext);\n  const { list, setList } = useContext(listContext);\n\n  const checkedHandler = () => {\n    if (item.isChecked) setCount(count - 1);\n    else setCount(count + 1);\n\n    const newList = [...list];\n    newList.splice(index, 1, {\n      ...item,\n      isChecked: !newList[index].isChecked,\n    });\n\n    setList(newList);\n  };\n\n  return (\n    <ToDo>\n      <Check\n        type=\"checkbox\"\n        id=\"Checkbox\"\n        checked={item.isChecked}\n        onChange={checkedHandler}\n      />\n      {item.value}\n      <DeleteButton>Ã—</DeleteButton>\n    </ToDo>\n  );\n};\n","/home/tomato/wave-todo/src/Router.tsx",["55"],"/home/tomato/wave-todo/src/contexts/countContext.ts",[],"/home/tomato/wave-todo/src/contexts/listContext.ts",[],{"ruleId":"56","severity":1,"message":"57","line":107,"column":9,"nodeType":"58","messageId":"59","endLine":107,"endColumn":15},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"56","severity":1,"message":"64","line":1,"column":20,"nodeType":"58","messageId":"59","endLine":1,"endColumn":30},{"ruleId":"56","severity":1,"message":"65","line":3,"column":21,"nodeType":"58","messageId":"59","endLine":3,"endColumn":32},{"ruleId":"56","severity":1,"message":"66","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":18},{"ruleId":"56","severity":1,"message":"67","line":17,"column":7,"nodeType":"58","messageId":"59","endLine":17,"endColumn":19},{"ruleId":"56","severity":1,"message":"66","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":18},{"ruleId":"56","severity":1,"message":"64","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":20},"@typescript-eslint/no-unused-vars","'WaveIf' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'useContext' is defined but never used.","'listContext' is defined but never used.","'useState' is defined but never used.","'DeleteButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]